apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: kubeos-go-template
  title: Kubeos Go Template for Kubernetes Jobs
  description: Scaffold a Go-based Kubernetes Job with GitHub Actions workflows, Docker image build, and Kubernetes deployment.
  tags:
    - recommended
    - go
    - kubernetes
spec:
  owner: sourabh.rustagi
  type: service
  parameters:
    - title: Basic Information
      required:
        - app_name
        - owner
        - repo_url
      properties:
        app_name:
          title: Application Name
          type: string
          description: Unique name of the service.
          ui:field: EntityNamePicker
        description:
          title: Application Description
          type: string
          description: Brief description of the service (optional).
        owner:
          title: Owner
          type: string
          description: Owner of the component.
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        system:
          title: System
          type: string
          description: System to which the component belongs.
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              - kind: System
        repo_url:
          title: Repository URL
          type: string
          description: URL of the GitHub repository.
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

    - title: Docker Configuration
      required:
        - docker_username
        - docker_password
      properties:
        docker_username:
          title: Docker Username
          type: string
          description: Docker Hub username for pushing images.
        docker_password:
          title: Docker Password
          type: string
          description: Docker Hub password for authentication.

    - title: Deployment Configuration
      required:
        - deployment_name
      properties:
        deploy_to_k8s:
          title: Deploy to Kubernetes
          type: boolean
          description: Whether to deploy the application to Kubernetes.
        deployment_name:
          title: Deployment Name
          type: string
          description: Name of the Kubernetes deployment.
          maxLength: 100
          pattern: '^[a-z0-9]+(-[a-z0-9]+)*$'


  steps:
    - id: fetch-template
      name: Fetch Skeleton and Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          app_name: ${{ parameters.app_name }}
          description: ${{ parameters.description }}
          repo_url: ${{ parameters.repo_url | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          docker_username: ${{ parameters.docker_username }}
          k8_namespace: dev
          kustomize_path: ./deploy/k8s/overlays/dev
          project_org: kubeosx
          repo_branch: main
          deployment_name : ${{ parameters.deployment_name }}


    - id: publish-repo
      name: Publish Repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: Repository for ${{ parameters.app_name }}
        repoUrl: ${{ parameters.repo_url }}
        defaultBranch: main
        repoVisibility: public
        secrets:
          DOCKER_USER: ${{ parameters.docker_username }}
          DOCKER_PASSWORD: ${{ parameters.docker_password }}

    - id: fetch-cluster-repo
      name: Fetch Kubernetes Cluster Repository
      action: fetch:plain
      input:
        url: https://github.com/kubeosx/kubeos-cluster.git
        targetPath: kubeos

    - id: fetch-autopr-template
      name: Fetch AutoPR Template
      action: fetch:template
      input:
        url: https://github.com/kubeosx/kubeos-autopr-templates.git
        targetPath: kubeos/clusters/dev
        values:
          app_name: ${{ parameters.app_name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          repo_url: ${{ parameters.repo_url | parseRepoUrl }}
          docker_username: ${{ parameters.docker_username }}
          project_k8_namespace: dev
          kustomize_path: ./deploy/k8s/overlays/dev
          project_org: kubeosx
          repo_branch: main
          http_port: 8080
          deployment_name: ${{ parameters.deployment_name }}

    - id: update-kustomization
      name: Update Kustomization File
      action: roadiehq:utils:fs:append
      input:
        path: kubeos/clusters/dev/kustomization.yaml
        content: '${{ "\n  - "+ parameters.app_name }}/'

    - id: create-pr
      name: Create Pull Request
      action: publish:github:pull-request
      input:
        repoUrl: github.com?repo=kubeos-cluster&owner=kubeosx
        description: Add deployment configuration for ${{ parameters.app_name }}
        branchName: feature/onboarding-${{ parameters.app_name }}
        targetBranchName: main
        gitCommitMessage: Add new deployment configuration
        title: PR for new app ${{ parameters.app_name }}
        sourcePath: kubeos/clusters/dev
        targetPath: clusters/dev

    - id: register-catalog
      name: Register in Backstage Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish-repo.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps.publish-repo.output.remoteUrl }}
      - title: Open in Catalog
        icon: catalog
        entityRef: ${{ steps.register-catalog.output.entityRef }}
